template header
ruleName
attribute
comparator
valueToCompare
alarmName
alarmDescription
alarmType
numOfEvents
timeFrame

package drools.templates;

import bsep.sc.SiemCenter.events.LogEvent;
import bsep.sc.SiemCenter.events.Alarm;
import bsep.sc.SiemCenter.events.AlarmType;
import java.util.Date;

template "Multiple logs with single condition template"

rule
    when
        // binding
            // $src: source
            // constraint
        // acumulate
            // source == $src i event type = fail
            // window:time
    then
exit


rule "@{ruleName}"
    no-loop true
    timer(cron:0/5 * * * * ?)
    when
        LogEvent($id: account_id, $name: account_name)

        $log1: LogEvent($src: machineSource, $dest: machineS)

        Number(intValue >= @{numOfEvents}) from accumulate(
            $log2: LogEvent(
                this != $log1
                processed = false,
                @{attribute} @{comparator} "@{valueToCompare}"
            ) over window:time(@{timeFrame}),
            count($log2)
        )
    then
        for (object : $objects)
            object.setProcessed(true);

        System.out.println("@{ruleName}");
        insert(new Alarm($src, "@{alarmName}", "@{alarmDescription}", AlarmType.@{alarmType}, new Date()));
end

end template